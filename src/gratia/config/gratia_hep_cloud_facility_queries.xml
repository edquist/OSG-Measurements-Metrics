<graphtool-config>

  <import module="gratia.config" data_file="generic_queries.xml" />
  <class type="SqlQueries" name="GratiaGenericHEPCloudFacilityQueries">
    <attribute name="display_name"> HEP Cloud Facility Generic </attribute>
    <attribute name="connection_manager"> GratiaConnMan </attribute>
    
    <query name="master_summary_data">
        <inputs>
            <input name="span" type="int" kind="sql">86400</input>
            <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-13*86400</input>
            <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
            <input name="includeFailed" kind="sql"> true </input>
            <input name="includeSuccess" kind="sql"> true </input>
            <input name="facility" kind="sql"> .* </input>
            <input name="probe" kind="sql"> .* </input>
            <input name="user" kind="sql"> .* </input>
            <input name="vo" kind="sql"> .* </input>
            <input name="role" kind="sql"> .* </input>
            <input name="exclude-role" kind="sql"> NONE </input>
            <input name="exclude-vo" kind="sql"> Unknown|unknown|other </input>
            <input name="exclude-facility" kind="sql"> NONE|Generic|Obsolete </input>
            <input name="exclude-user" kind="sql"> NONE </input>
            <input name="exlude-empty-nulls-unkowns" >YES</input>
            <!-- opportunistic filter variables NOT REQUIRED FOR HEP CLOUD QUERIES -->
            <!-- <input name="opportunistic-filter" kind="sql">BOTH</input> -->
            <!-- <input name="sql_dynamic_modif_func_mod_name">gratia.database.opportunistic_filter</input> -->
            <!-- <input name="sql_dynamic_modif_func">oim_vo_ownership.alter_sql</input> -->
        </inputs>
        <sql>
            SELECT
                <slot name="group"/>,
                truncate( unix_timestamp(R.EndTime) / :span, 0 ) * :span as time,
                <slot name="column"/>
            FROM
                MasterSummaryData R
            JOIN
                Probe P on R.ProbeName = P.probename
            JOIN
                Site S on S.siteid = P.siteid
            JOIN
                VONameCorrection VC ON (VC.corrid=R.VOcorrid)
            JOIN
                VO on (VC.void = VO.void)
            <slot name="join"/>
            WHERE
                R.EndTime &gt;= :starttime AND
                R.EndTime &lt; :endtime AND
                S.SiteName regexp :facility AND
                VO.VOName regexp :vo AND
                VC.VOName regexp :role AND
                (NOT (VC.VOName regexp :exclude-role)) AND
                (R.ResourceType = 'AWSVM') AND
                (:includeFailed='true' OR ApplicationExitCode=0) AND
                (:includeSuccess ='true' OR ApplicationExitCode!=0) AND
                (NOT (S.SiteName regexp :exclude-facility)) AND
                (NOT (VO.VOName regexp :exclude-vo)) AND
                R.WallDuration &lt; 1100000000 AND
                R.ProbeName regexp :probe AND
                (NOT (R.CommonName regexp :exclude-user)) AND
                R.CommonName regexp :user
                <slot name="where"/>
            GROUP BY 
                <slot name="group"/>
                ,time
        </sql>
        <results module="graphtool.database.query_handler" function="results_parser">
            <inputs>
                <input name="pivots"> 0 </input>
                <input name="grouping"> 1 </input>
                <input name="results"> 2 </input>
                <input name="pivot_transform">fermi_storage_pools_parser</input>
                <input name="grouping_transform">make_int</input>
            </inputs>
        </results>
        <attribute name="graph_type">GratiaStackedBar</attribute>
        <attribute name="pivot_name"></attribute>
        <attribute name="title"></attribute>
        <attribute name="column_names"></attribute>
        <attribute name="column_units"></attribute>
    </query>
    
    <query name="job_usage_record"> 
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-13*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
        <input name="facility" kind="sql"> .* </input>
        <input name="probe" kind="sql"> .* </input>
        <input name="vo" kind="sql"> .* </input>
        <input name="exclude-vo" kind="sql"> other </input>
        <input name="exclude-facility" kind="sql"> NONE|Generic|Obsolete </input>
        <input name="exlude-empty-nulls-unkowns" >YES</input>
      </inputs>
      <sql>
       SELECT
          <slot name="group"/>,
          truncate( unix_timestamp(R.EndTime) / :span, 0 ) * :span as time,
          <slot name="column"/>
        FROM
          JobUsageRecord R 
          JOIN JobUsageRecord_Meta M ON R.dbid=M.dbid 
          JOIN VONameCorrection VC ON (VC.ReportableVOName=R.ReportableVOName) and (VC.VOName=R.VOName) 
          JOIN VO on (VC.void = VO.void) 
          JOIN Probe P on M.ProbeName = P.probename
          JOIN Site S on S.siteid = P.siteid
          <slot name="JOIN"/>
        WHERE
          R.ResourceType='AWSVM' AND
          R.EndTime &gt;= :starttime AND
          R.EndTime &lt; :endtime AND
          S.SiteName regexp :facility AND
          M.probename regexp :probe AND
          R.VOName regexp :vo AND
          (NOT (S.SiteName regexp :exclude-facility)) AND
          (NOT (R.VOName regexp :exclude-vo))
          <slot name="where"/>
        GROUP BY
          <slot name="group"/>,
          time
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0 </input>
          <input name="grouping"> 1 </input>
          <input name="results"> 2 </input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="graph_type">GratiaStackedBar</attribute>
      <attribute name="pivot_name" />
      <attribute name="grouping_name">Time</attribute>
      <attribute name="title" />
      <attribute name="column_names" />
      <attribute name="column_units" />
    </query>
  </class>

  <class type="SqlQueries" name="GratiaHEPCloudFacilityQueries">
    <attribute name="display_name"> HEP Cloud Facility </attribute>
    <attribute name="connection_manager"> GratiaConnMan </attribute>

    <aggregate>
      <connection>gratia-hep-cloud-facility</connection>
    </aggregate>
    
    <!-- Master Summary Data Queries -->
    
    <query name="vo_aws_daily_hours" base="GratiaGenericHEPCloudFacilityQueries.master_summary_data">
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-13*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
      </inputs>
      <sql>
        <filler name="group">VO.VOName,R.HostDescription
        </filler>
        <filler name="column"> sum(Cores*WallDuration)/3600 </filler>
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0,1 </input>
          <input name="grouping"> 2 </input>
          <input name="results"> 3 </input>
          <input name="pivot_transform">comma_separeted_pivot_arr</input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="pivot_name">VO, AWS Zone</attribute>
      <attribute name="title">Daily Hours by VO and AWS Zone</attribute>
      <attribute name="column_names">Wall Time</attribute>
      <attribute name="column_units">Hours</attribute>
    </query>
    
    <!-- Job Usage Record Queries -->
    
    <query name="vo_aws_charges" base="GratiaGenericHEPCloudFacilityQueries.job_usage_record">
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-13*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
      </inputs>
      <sql>
        <filler name="group"> 
          VO.VOName,
          R.HostDescription 
        </filler>
        <filler name="column"> sum(Charge) </filler>
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0,1 </input>
          <input name="grouping"> 2 </input>
          <input name="results"> 3 </input>
          <input name="pivot_transform">comma_separeted_pivot_arr</input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="pivot_name">VO, AWS Zone</attribute>
      <attribute name="title">Daily Charges by VO and AWS Zone</attribute>
      <attribute name="column_names">Charge</attribute>
      <attribute name="column_units">USD</attribute>
    </query>
    
    <query name="vo_instance_type_charges" base="GratiaGenericHEPCloudFacilityQueries.job_usage_record">
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-13*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
      </inputs>
      <sql>
        <filler name="group"> 
          VO.VOName, 
          R.ProcessorsDescription 
        </filler>
        <filler name="column"> sum(Charge) </filler>
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0,1 </input>
          <input name="grouping"> 2 </input>
          <input name="results"> 3 </input>
          <input name="pivot_transform">comma_separeted_pivot_arr</input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="pivot_name">VO, Instance Type</attribute>
      <attribute name="title">Daily Charges by VO and Instance Type</attribute>
      <attribute name="column_names">Charge</attribute>
      <attribute name="column_units">USD</attribute>
    </query>
    
    <query name="vo_instance_type_daily_hours" base="GratiaGenericHEPCloudFacilityQueries.job_usage_record">
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-13*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
      </inputs>
      <sql>
        <filler name="group"> 
          VO.VOName, 
          R.ProcessorsDescription 
        </filler>
        <filler name="column"> sum(Processors*WallDuration)/3600 </filler>
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0,1 </input>
          <input name="grouping"> 2 </input>
          <input name="results"> 3 </input>
          <input name="pivot_transform">comma_separeted_pivot_arr</input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="pivot_name">VO, Instance Type</attribute>
      <attribute name="title">Daily Hours by VO and Instance Type</attribute>
      <attribute name="column_names">Wall Time</attribute>
      <attribute name="column_units">Hours</attribute>
    </query>
    
    <query name="account_type_instance_type_running_vms" base="GratiaGenericHEPCloudFacilityQueries.job_usage_record">
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-13*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
      </inputs>
      <sql>
        <filler name="group"> 
          R.GlobalUsername, 
          R.ProcessorsDescription 
        </filler>
        <filler name="column"> count(distinct R.LocalJobId) </filler>
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0,1 </input>
          <input name="grouping"> 2 </input>
          <input name="results"> 3 </input>
          <input name="pivot_transform">comma_separeted_pivot_arr</input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="pivot_name">Account Type, Instance Type</attribute>
      <attribute name="title">Daily Number of Running VMs by Account Type and Instance Type</attribute>
      <attribute name="column_names">Running VMs</attribute>
      <attribute name="column_units"></attribute>
    </query>
    
    <query name="vo_aws_running_vms" base="GratiaGenericHEPCloudFacilityQueries.job_usage_record">
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-13*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
      </inputs>
      <sql>
        <filler name="group"> VO.VOName, R.HostDescription </filler>
        <filler name="column"> count(distinct R.LocalJobId) </filler>
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0,1 </input>
          <input name="grouping"> 2 </input>
          <input name="results"> 3 </input>
          <input name="pivot_transform">comma_separeted_pivot_arr</input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="pivot_name">VO, AWS Zone</attribute>
      <attribute name="title">Daily Number of Running VMs by VO and AWS Zone</attribute>
      <attribute name="column_names">Running VMs</attribute>
      <attribute name="column_units"></attribute>
    </query>
    
    <query name="vo_instance_type_running_vms" base="GratiaGenericHEPCloudFacilityQueries.job_usage_record">
      <inputs>
        <input name="span" type="int" kind="sql">86400</input>
        <input name="starttime" partial="down" type="datetime" kind="sql">time.time()-13*86400</input>
        <input name="endtime" partial="up" type="datetime" kind="sql">time.time()</input>
      </inputs>
      <sql>
        <filler name="group"> VO.VOName, R.ProcessorsDescription </filler>
        <filler name="column"> count(distinct R.LocalJobId) </filler>
      </sql>
      <results module="graphtool.database.query_handler" function="results_parser">
        <inputs>
          <input name="pivots"> 0,1 </input>
          <input name="grouping"> 2 </input>
          <input name="results"> 3 </input>
          <input name="pivot_transform">comma_separeted_pivot_arr</input>
          <input name="grouping_transform">make_int</input>
        </inputs>
      </results>
      <attribute name="pivot_name">VO, Instance Type</attribute>
      <attribute name="title">Daily Number of Running VMs by VO and Instance Type</attribute>
      <attribute name="column_names">Running VMs</attribute>
      <attribute name="column_units"></attribute>
    </query>
    
  </class>
</graphtool-config>